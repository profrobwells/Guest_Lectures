#background on tidyverse: https://www.tidyverse.org/packages/
# install.packages("formattable")
#install.packages("janitor")
#install.packages("tidyverse")
#install.packages("jsonlite")
library(tidyverse)
library(janitor)
library(lubridate)
library(jsonlite)
library(tidyr)
vignette("json-apis", package = "jsonlite")
drivers <- res[["MRData"]][["RaceTable"]][["Races"]][["Results"]][[1]][["Driver"]]
res <- fromJSON('http://ergast.com/api/f1/2004/1/results.json')
#head(res)
drivers <- res[["MRData"]][["RaceTable"]][["Races"]][["Results"]][[1]][["Driver"]]
brokerjson <- fromJSON('https://services.arcgis.com/PwY9ZuZRDiI5nXUB/ArcGIS/rest/services/Agent_And_Broker_Locations/FeatureServer/0/query?where=0%3D0&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&relationParam=&returnGeodetic=false&outFields=Last_Name%2CFirst_Name%2CMiddle_Name%2CEmail_Address%2CAddress%2CState%2CZip%2CPhone%2CLic_Type%2CEXCEL_POINT_Y%2CEXCEL_POINT_X%2CFID&returnGeometry=true&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&defaultSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=false&quantizationParameters=&sqlFormat=none&f=pjson&token=')
#head(brokerjson )
broker <- brokerjson[["features"]][["attributes"]]
glimpse(broker)
broker$date <- Sys.Date()
#clean column names
broker <- clean_names(broker)
broker <- separate(broker, col = address, into = c("street", "city"), sep = ",")
broker_city %>%
slice_max(total, n= 20) %>%
arrange(desc(total)) %>%
#sandwich the ggplot code
ggplot(aes(x = city, y = total, fill = total)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle=90)) +
labs(title = "Insurance brokers in Arkansas",
subtitle = "Source: Arkansas public records, 2024",
caption = "Graphic by Rob Wells, 5/29/2024",
y="Number brokers",
x="")
SF <- rio::import("https://docs.google.com/spreadsheets/d/1-nkosLJKkfeLSl-UG82DDyiEw5-62kX2alS6ICG9iuk/edit#gid=552005485", sheet = "SF Police_Department_Calls_for_")
#This cleans column names
SF <- janitor::clean_names(SF)
#This processes dates for analysis
SF$call_date2 <- mdy(SF$call_date)
#This creates a new column for year
SF$year <- year(SF$call_date2)
copspeak <- rio::import("https://docs.google.com/spreadsheets/d/1l86DSZ5LWxlXTliXu06Iai0DiYXlJE4hUYBeddL0XXg/edit#gid=554934632", sheet ="RadioCodes")
#head(copspeak)
#HAN = Handled
#ADV = Advised
#GOA = Gone on arrival
SF <- SF %>%
mutate(disposition1 = disposition)
SF$disposition1 <- str_replace_all(SF$disposition1, pattern=fixed('ABA'), replacement=fixed('Abated') )
#Again with ADM
SF$disposition1 <- str_replace_all(SF$disposition1, pattern=fixed('ADM'), replacement=fixed('Admonished') )
SF <- SF %>%
mutate(disposition1 = case_when(
str_detect(disposition, "CIT") ~ "Cited",
str_detect(disposition, "CRM") ~ "Criminal",
str_detect(disposition, "GOA") ~ "Gone",
str_detect(disposition, "HAN") ~ "Handled",
str_detect(disposition, "NCR") ~ "No_Criminal",
str_detect(disposition, "ND") ~ "No_Dispo",
str_detect(disposition, "NOM") ~ "No_Merit",
str_detect(disposition, "PAS") ~ "PlaceSecure",
str_detect(disposition, "REP") ~ "Report",
str_detect(disposition, "SFD") ~ "Medical",
str_detect(disposition, "UTL") ~ "Unfound",
str_detect(disposition, "VAS") ~ "Vehicle-Secure",
str_detect(disposition, '22') ~ "Cancel",
str_detect(disposition, "Not recorded") ~ "NotRecorded",
str_detect(disposition, "CAN") ~ "Cancel",
str_detect(disposition, "ADV") ~ "Advised",
str_detect(disposition, "ARR") ~ "Arrest",
TRUE ~ disposition1
))
Action <- SF %>%
count(disposition1, disposition) %>%
arrange(desc(n))
#head(Action)
Action %>%
filter(n > 100) %>%
ggplot(aes(x = reorder(disposition1, n), y = n, fill=n)) +
geom_bar(stat = "identity", show.legend = FALSE) +
coord_flip() +    #this makes it a horizontal bar chart instead of vertical
labs(title = "Action on Homeless Calls, San Francisco",
subtitle = "SF PD Service Call Data, 3/2016-11/2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Action")
Types <- SF %>% count(original_crime_type_name) %>%
group_by(original_crime_type_name) %>%
arrange(desc(n))
#head(Types)
# 915/919
# 915 Sleeper
# Some have commentary
# 915 Encampment
#convert all text to lowercase
SF$crime1 <- tolower(SF$original_crime_type_name)
#Replace / with a space
SF$crime1 <- gsub("/", " ", SF$crime1)
#Replace '
SF$crime1 <- gsub("'", "", SF$crime1)
#fix space in homeless complaint
SF$crime1 <- gsub("homeless complaint", "homeless_complaint", SF$crime1)
#split crime1 into three new columns
SF <- separate(data = SF, col = crime1, into = c("crime2", "crime3", "crime4"), sep = " ", extra = "merge", fill = "right")
#Clean Crime2
SF <- SF %>%
mutate(crime_cleaned = case_when(
str_detect(crime2, '919') ~ "sit_lying",
str_detect(crime2, '915') ~ "homeless_complaint",
str_detect(crime2, '915s') ~ "homeless_complaint",
str_detect(crime2, '915x') ~ "homeless_complaint",
str_detect(crime2, '909') ~ "interview",
str_detect(crime2, '902') ~ "aggress_solicit",
str_detect(crime2, '811') ~ "intoxicated",
str_detect(crime2, '601') ~ "trespasser",
str_detect(crime2, "aggressive") ~ "aggressive",
str_detect(crime2, "chop shop") ~ "chop_shop",
str_detect(crime2, "dog") ~ "dog",
str_detect(crime2, "drugs") ~ "drugs",
str_detect(crime2, "homeless_complaint") ~ "homeless_complaint",
str_detect(crime2, "music") ~ "music",
str_detect(crime2, "panhandling") ~ "panhandling",
str_detect(crime2, "poss") ~ "possession",
str_detect(crime2, "sleep") ~ "sleep",
str_detect(crime2, "tent") ~ "tent",
TRUE ~ ""
))
#Look at the Types table: some columns have one code, some have two.
Types %>%
distinct()
SF %>%
count(crime_cleaned) %>%
filter(!crime_cleaned =="") %>%
filter(n > 30) %>%
ggplot(aes(x = reorder(crime_cleaned, n), y = n, fill=n)) +
geom_bar(stat = "identity", show.legend = FALSE) +
coord_flip() +    #this makes it a horizontal bar chart instead of vertical
labs(title = "Types of Complaints in 311 Calls",
subtitle = "SF PD Service Call Data, 3/2016-11/2019",
caption = "Graphic by Wells",
y="Types of Complaints",
x="Action")
SF <- SF %>%
mutate(yearmo = format(call_date2, "%Y-%m"))
SF %>%
filter(grepl("ARR", disposition)) %>%
count(yearmo) %>%
group_by(yearmo) %>%
ggplot(aes(x = yearmo, y = n, fill=n)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_smooth(method = lm, se=FALSE, color = "red") +
theme(axis.text.x = element_text(angle=90)) +
#Changes angle of x axis labels
#coord_flip() +    #this makes it a horizontal bar chart instead of vertical
labs(title = "Arrest Trends on Homeless Calls in San Francisco",
subtitle = "Arrests Based on SF PD Service Call Data by Month 2017-2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Year")
#format to hours
SF$date_time <- mdy_hm(SF$call_date_time)
SF$hour <- hour(SF$date_time)
SF %>%
count(hour) %>%
group_by(hour) %>%
ggplot(aes(x = hour, y = n, fill=n)) +
geom_bar(stat = "identity", show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90)) +
#Changes angle of x axis labels
#coord_flip() +    #this makes it a horizontal bar chart instead of vertical
labs(title = "Hours of Homeless Calls, San Francisco",
subtitle = "SF PD Service Call Data by Month 2017-2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Hour")
